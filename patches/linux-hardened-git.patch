--- PKGBUILD.orig	2022-11-04 22:50:16.828730813 +0000
+++ PKGBUILD	2022-11-04 22:53:32.433241304 +0000
@@ -14,7 +14,7 @@ arch=(x86_64)
 license=(GPL2)
 makedepends=(
   bc libelf pahole cpio perl tar xz
-  xmlto python-sphinx python-sphinx_rtd_theme graphviz imagemagick texlive-latexextra
+  xmlto python-sphinx python-sphinx_rtd_theme graphviz imagemagick
   git
 )
 options=('!strip')
@@ -46,7 +46,34 @@ pkgver() {
 }
 
 prepare() {
-  cd $_srcname
+  # Out-of-tree module signing
+  #
+  ######################################################
+  # this is added at the start of prepare() & replaces #
+  # 'cd $_srcname'                                     #
+  ######################################################
+  # uncomment for linux-xanmod-cacule & some other AUR kernels
+  # to match the Package Maintainer's variable for the kernel
+  # sources directory.
+  #
+  # local _srcname=linux-${_major}
+
+  msg2 "Rebuilding local signing key..."
+
+  cp -rf /usr/src/certs-local ./
+  cd certs-local
+
+  msg2 "Updating kernel config with new key..."
+
+  # NB: config path must be quoted for file globbing to work
+  # some kernels have multiple config files (e.g linux-libre)
+  # to see configurable options run:
+  # /usr/src/certs-local/genkeys.py -h
+  ./genkeys.py -v --config '../config*'
+
+  cd ../$_srcname
+
+# cd $_srcname
 
   echo "Setting version..."
   rm -f localversion* include/config/kernel.release
@@ -75,7 +102,7 @@ prepare() {
 
 build() {
   cd $_srcname
-  make htmldocs all
+  make all
 }
 
 _package() {
@@ -186,6 +213,33 @@ _package-headers() {
   echo "Adding symlink..."
   mkdir -p "$pkgdir/usr/src"
   ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"
+
+    # Out-of-tree module signing
+  ##################################################
+  # this is added at the end of _package-headers() #
+  ##################################################
+  # This is run in the kernel source / build directory
+  #
+  # some AUR kernels may also need to set $builddir to match
+  # the Package Maintainer's variable for the build dir
+  # inside the package:
+  #
+  # local builddir="$pkgdir/usr/lib/modules/${_kernver}/build"
+
+  msg2 "Local Signing certs for out-of-tree modules..."
+
+  certs_local_src="../certs-local"
+  certs_local_dst="${builddir}/certs-local"
+
+  # install certificates
+  ${certs_local_src}/install-certs.py $certs_local_dst
+
+  # install dkms tools
+  dkms_src="$certs_local_src/dkms"
+  dkms_dst="${pkgdir}/etc/dkms"
+  mkdir -p $dkms_dst
+
+  rsync -a $dkms_src/{kernel-sign.conf,kernel-sign.sh} $dkms_dst/
 }
 
 _package-docs() {
@@ -207,7 +261,7 @@ _package-docs() {
   ln -sr "$builddir/Documentation" "$pkgdir/usr/share/doc/$pkgbase"
 }
 
-pkgname=(linux-hardened-git linux-hardened-headers-git linux-hardened-docs-git)
+pkgname=(linux-hardened-git linux-hardened-headers-git)
 for _p in "${pkgname[@]}"; do
   _p=${_p/-git/}
   eval "package_$_p-git() {
